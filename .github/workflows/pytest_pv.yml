name: test vardict filter command
on:
    push:
        branches: [main, develop, release/*]
        tags:
            - '*'
        paths-ignore:
            - "docs/**"
            - "**.md"
    pull_request:
        branches: "*"
        paths-ignore:
            - "docs/**"
            - "**.md"
jobs:
    run_test_vardict_filter:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.8, 3.9]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up Python 
              uses: actions/setup-python@v3
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install poetry
              uses: snok/install-poetry@v1.0.0
              with:
                virtualenvs-create: true
                virtualenvs-in-project: true
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v2
              with:
                path: .venv
                key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              run: poetry install
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            - name: Pytest for postprocessing_variant_calls
              run: |
                  pytest tests
